from threading import Thread
from picamera.array import PiRGBArray
from picamera import PiCamera
import colorutils

class PiVideoStream:

    def __init__(self, settings):
        self._settings = settings
        self._stop_event = settings.stop_event
        self.camera = PiCamera()
        self.camera.resolution = (640, 480)
        self.camera.framerate = 5
        self.rawCapture = PiRGBArray(self.camera, size=(640, 480))
        self.stream = self.camera.capture_continuous(self.rawCapture, format='bgr', use_video_port=True)
        self.image = None
        self.stopped = False

    def start(self):
        self._settings.log.msg("PiVideoStream: starting video stream...")
        t = Thread(target=self.update)
        t.daemon = True
        t.start()
        return self

    def update(self):
        for frame in self.stream:
            self.image = frame.array
            self.rawCapture.truncate(0)

            if self.stopped:
                self.stream.close()
                self.rawCapture.close()
                self.camera.close()
                return

            self._stop_event.wait(0.01)

    def stop(self):
        self.stopped = True
