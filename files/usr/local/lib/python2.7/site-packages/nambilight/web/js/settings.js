// Update settings before leaving page.
$(window).bind('beforeunload', function(){
  if(document.getElementById("led.color").is(':focus') ||
      document.getElementById("led.brightness").is(':focus')) {
    console.log("Updating alarm with current settings before leaving page.");
    saveSettings();
  }
});

(function(window, document) {
  var settings;

  /* Global Functions */

  // Update settings via API call.
  window.saveSettings = function() {
    console.log("Updating alarm settings.");
    var xhttp = new XMLHttpRequest();

    getSettingsFromGui();
    xhttp.open("POST", "/save_settings", true);
    xhttp.send(JSON.stringify(settings));
  }

  // Get settings via API call.
  window.getSettings = function() {
    console.log("Getting settings via API.");
    $.ajax({
      url: "/get_settings"
    }).then(function(data) {
      settings = data;
      setSettings();
    });
  }

  /* Private Functions */

  // Update webinterface from settings.
  function setSettings() {
    document.getElementById("led.color").style.backgroundColor  = settings["led.color"];
    document.getElementById("led.brightness").value = (settings["led.brightness"] * 100);
    document.getElementById("screen.x").value = settings["screen.coordinates"][0];
    document.getElementById("screen.y").value = settings["screen.coordinates"][1];
    document.getElementById("screen.w").value = settings["screen.coordinates"][2];
    document.getElementById("screen.h").value = settings["screen.coordinates"][3];
  }

  // Get settings from webinterface.
  function getSettingsFromGui() {
    console.log("Getting settings from webinterface.")
    settings["led.color"] = document.getElementById("led.color").value;
    settings["led.brightness"] = (document.getElementById("led.brightness").value / 100);
    x = document.getElementById("screen.x").value;
    y = document.getElementById("screen.y").value;
    w = document.getElementById("screen.w").value;
    h = document.getElementById("screen.h").value;
    settings["screen.coordinates"] = [parseInt(x, 10), parseInt(y, 10), parseInt(w, 10), parseInt(h, 10)]
  }
}(this, this.document));
